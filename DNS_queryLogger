when CLIENT_ACCEPTED {
    # The syslog server defined below line.
    # You may need to change it before use this iRule.
    set hsl [HSL::open -proto UDP -pool syslog_srv_pool]
    
    set size [UDP::payload length]
    binary scan [UDP::payload] S {id}
    set id [expr { $id & 0xffff }]
    binary scan [UDP::payload] @3c {sflags}
    set rcode [expr {$sflags & 0xf}]
    
    # Read from 13th char to through to end of the length
    # After then try to find next until the marker which is the first 
    # appearance of the "0x00" char.
    set queryStart 12
    binary scan [UDP::payload] @${queryStart}c count
    #log local0. "Next count is: $count"
    
    set chr ""
    while { $count > 0 } {
    
        incr queryStart
        binary scan [UDP::payload] @${queryStart}c${count} chr
        append queryName $chr
        #log local0. "Read: $chr and QN: $queryName"
        incr queryStart $count
        binary scan [UDP::payload] @${queryStart}c count
        #log local0. "Count is $count"
        if { $count > 0 } {
            append queryName " "
            append queryName 46
            append queryName " "
        }
    }
    
    foreach q $queryName {
        # Here we convert all the bytes to chars and we respect to case sensitivity
        if { $q < 91 && $q > 40 || $q > 96 && $q < 123 } { append query [format %c $q] }
    }
    
    set queryLength [expr {[string length $query] + 1 + 13}]
    #log local0. "queryLength is $queryLength"
    binary scan [UDP::payload] @${queryLength}S queryType
    
    switch -glob -- $queryType {
        1 { set queryType "A" }
        2 { set queryType "NS" }
        5 { set queryType "CNAME" }
        6 { set queryType "SOA" }
        12 { set queryType "PTR" }
        15 { set queryType "MX" }
        16 { set queryType "TXT" }
        28 { set queryType "AAAA" }
        33 { set queryType "SRV" }
        35 { set queryType "NAPTR" }
        46 { set queryType "RRSIG" }
        48 { set queryType "DNSKEY" }
        52 { set queryType "TLSA" }
        65 { set queryType "HTTPS" }
        256 { set queryType "URI" }
        257 { set queryType "CAAA" }
        default { set queryType "${queryType}:UNKONWN" }
    }
    
    # After tests done, you may want to stop logging local file.
    log local0. "Query From: [IP::client_addr] to: [IP::local_addr] Size: $size ID: $id  Query: $query Query-Type: $queryType"
    HSL::send $hsl "Query From: [IP::client_addr] to: [IP::local_addr] Size: $size ID: $id  Query: $query Query-Type: $queryType\n"
    unset size id sflags rcode queryLength queryStart queryName q query queryType chr count   
}
